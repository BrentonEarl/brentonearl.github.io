---
layout: post
title: "Jekyll: Pagination, Site Map and 404 Redirects"
date: 2013-07-09
category: jekyll
description: "How to list your posts on multiple pages, create a sitemap and create 404 Redirection page in Jekyll."
comments: yes
outdated: yes
---

Previously I discussed the new site design and introduced the Jekyll static site generator.  As mentioned, the site was migrated from Wordpress to Jekyll.  Beginning a new Jekyll project generates a basic set of files with a predefined style sheet and site layout.  After modifying the layouts and adding pages, a few features were still missing.  Pagination, Site Maps, and a 404 redirect page were amongst the missing features.  Not difficult to implement, but I feel I should share my experience so that new Jekyll users can find more of the basics in one documented spot.  The [Jekyll](http://jekyllrb.com/) web site does document _how_ to use the API, but it does not show in depth guides on how to add certain features.  Searching the web yielded many methods of implementing said features and other features I had not thought to add.  


#### Pagination

If you look at the top right just below the menu on the [Home](/) page, you will notice a section that shows the pages and what page number you are on.  While on page one, the _previous_ link is not visible, but if you go to a page greater than the first site page, the word _previous_ displays as a link to the first page.  If you click the _next_ button you will notice that the page numbers increment, until the last page when the _next_ link disappears.

Web site designers and Web Application programmers have the ability to create dynamic content that will automatically adjust the Pagination of a web site.  In Jekyll you have to program the site in the same sense, but once the site has been generated, there will be __no__ dynamic code anywhere in your web site.  This is great because dynamic content sometimes leads  to web application vulnerabilites or sql injection on the database running that web application.

Anyway here is the code I include on the top and bottom of the default layout page that generates post listings.

{% highlight html%}

<div align="right">
{{ "{% if paginator.previous_page "}}%}
	{{ "{% if paginator.page == 2 "}}%}
		<a href="/">Previous</a>
	{{ "{% else "}}%}
		<a href="/page{{"{{ paginator.previous_page "}}}}">Previous</a>
	{{ "{% endif "}}%}
{{ "{% endif "}}%}
<span>Page: {{"{{ paginator.page "}}}} of {{"{{ paginator.total_pages "}}}}</span>
{{ "{% if paginator.next_page "}}%}
	<a href="/page{{"{{ paginator.next_page "}}}}">Next</a>
{{ "{% endif "}}%}
</div>
{% endhighlight %}


You will notice how exceedingly simple it is to add functionality to an entire web site with just a few lines of code. 



####Site Maps


Site maps make it possible to index an entire web site more effectively for search engines like google or bing.  If you go to the [Site map](http://exitstatusone.com/sitemap.xml) you will see all posts and pages indexed.  This was done using a plug in called "sitemap_generator.rb" located in the plugins directory.  It automatically generates the sitemap.xml.  I found it after a bit of googling.  There are a few other plugins out there that do a similar job, but I had difficulty trying to get them to properly append _http://exitstatusone.com_ to the beginning of each url.  So effectively other plugins I tried indexed the directories of the site without making it possible to find the pages on this site domain.

Here is the plug in github page:  [sitemap_generator.rb](https://github.com/kinnetica/jekyll-plugins)


####404 Redirect

After moving to Jekyll the wordpress permalinks were no longer present.  It was important that previously indexed search results in search engines like google would still be directed to the index page of this web site.  With nearly every link changed on the web site, it was imperitive a 404 Redirect page was added so that visitors would still make it to some part of the site.  The solution was quite simple.  This web site runs Apache 2 web server, so it was as simple as adding the 404 page to the sites-available configuration.  Once that was in place, a modification to the meta tags of the default layout page could redirect visitors from the 404 page to the index page.

Here is what I added to the Apache2 virtual host configuration:

{% highlight bash %}

ErrorDocument 404 /404.html

{% endhighlight %}


After that I added the following to the default layout template:


{% highlight html %}
{{ "{% if page.url == 404.html  "}}%}
	<meta http-equiv="refresh" content="10; url=/">
{{ "{% endif "}}%}
{% endhighlight %}


Once that was in place, non-existant URLs would be sent to the 404.html page and then the meta tag would refresh the page and send visitors to the index.


I will steadily continue to add more features as time progresses.  I also added an rss feed that is generated by a ruby script embeded within the rss.xml.  A quick google will show how that is done if you are interested.  Thanks for reading!  Please check back for updates. 
